var _0x55df=['aria-valuemax','max','ngMax','aria-valuenow','$observe','required','ariaInvalid','aria-invalid','ngDisabled','ngMessages','?ngMessages','aria-live','assertive','ngClick','bindRoleForClick','button','bindKeydown','ngKeypress','ngKeyup','keydown','which','keyCode','indexOf','target','isContentEditable','preventDefault','$apply','ngDblclick','ngAriaDisable','ngAria','info','\x22NG_VERSION_FULL\x22','provider','$aria','BUTTON','INPUT','TEXTAREA','DETAILS','SUMMARY','nodeName','extend','hasOwnProperty','$normalize','$watch','attr','$get','directive','ngShow','aria-hidden','$$watchExpr','ngValue','aria-checked','ngChecked','ngReadonly','aria-readonly','ngRequired','aria-required','ngModel','config','type','hidden','role','checkbox','menuitemcheckbox','menuitemradio','radio','range','progressbar','slider','tabindex','$modelValue','value','$viewValue','$isEmpty','ariaChecked','aria-valuemin','min','ngMin'];(function(_0x30c546,_0x26ef9a){var _0x3a061e=function(_0x5d34b3){while(--_0x5d34b3){_0x30c546['push'](_0x30c546['shift']());}};_0x3a061e(++_0x26ef9a);}(_0x55df,0x6a));var _0x1792=function(_0x11186b,_0x2574de){_0x11186b=_0x11186b-0x0;var _0x4c050d=_0x55df[_0x11186b];return _0x4c050d;};'use strict';/**
 * @ngdoc module
 * @name ngAria
 * @description
 *
 * The `ngAria` module provides support for common
 * [<abbr title="Accessible Rich Internet Applications">ARIA</abbr>](http://www.w3.org/TR/wai-aria/)
 * attributes that convey state or semantic information about the application for users
 * of assistive technologies, such as screen readers.
 *
 * ## Usage
 *
 * For ngAria to do its magic, simply include the module `ngAria` as a dependency. The following
 * directives are supported:
 * `ngModel`, `ngChecked`, `ngReadonly`, `ngRequired`, `ngValue`, `ngDisabled`, `ngShow`, `ngHide`,
 * `ngClick`, `ngDblClick`, and `ngMessages`.
 *
 * Below is a more detailed breakdown of the attributes handled by ngAria:
 *
 * | Directive                                   | Supported Attributes                                                                                |
 * |---------------------------------------------|-----------------------------------------------------------------------------------------------------|
 * | {@link ng.directive:ngModel ngModel}        | aria-checked, aria-valuemin, aria-valuemax, aria-valuenow, aria-invalid, aria-required, input roles |
 * | {@link ng.directive:ngDisabled ngDisabled}  | aria-disabled                                                                                       |
 * | {@link ng.directive:ngRequired ngRequired}  | aria-required                                                                                       |
 * | {@link ng.directive:ngChecked ngChecked}    | aria-checked                                                                                        |
 * | {@link ng.directive:ngReadonly ngReadonly}  | aria-readonly                                                                                       |
 * | {@link ng.directive:ngValue ngValue}        | aria-checked                                                                                        |
 * | {@link ng.directive:ngShow ngShow}          | aria-hidden                                                                                         |
 * | {@link ng.directive:ngHide ngHide}          | aria-hidden                                                                                         |
 * | {@link ng.directive:ngDblclick ngDblclick}  | tabindex                                                                                            |
 * | {@link module:ngMessages ngMessages}        | aria-live                                                                                           |
 * | {@link ng.directive:ngClick ngClick}        | tabindex, keydown event, button role                                                                |
 *
 * Find out more information about each directive by reading the
 * {@link guide/accessibility ngAria Developer Guide}.
 *
 * ## Example
 * Using ngDisabled with ngAria:
 * ```html
 * <md-checkbox ng-disabled="disabled">
 * ```
 * Becomes:
 * ```html
 * <md-checkbox ng-disabled="disabled" aria-disabled="true">
 * ```
 *
 * ## Disabling Specific Attributes
 * It is possible to disable individual attributes added by ngAria with the
 * {@link ngAria.$ariaProvider#config config} method. For more details, see the
 * {@link guide/accessibility Developer Guide}.
 *
 * ## Disabling `ngAria` on Specific Elements
 * It is possible to make `ngAria` ignore a specific element, by adding the `ng-aria-disable`
 * attribute on it. Note that only the element itself (and not its child elements) will be ignored.
 */var ARIA_DISABLE_ATTR=_0x1792('0x0');var ngAriaModule=angular['module'](_0x1792('0x1'),['ng'])[_0x1792('0x2')]({'angularVersion':_0x1792('0x3')})[_0x1792('0x4')](_0x1792('0x5'),$AriaProvider);var nodeBlackList=[_0x1792('0x6'),'A',_0x1792('0x7'),_0x1792('0x8'),'SELECT',_0x1792('0x9'),_0x1792('0xa')];var isNodeOneOf=function(_0x254b4c,_0x5d0c82){if(_0x5d0c82['indexOf'](_0x254b4c[0x0][_0x1792('0xb')])!==-0x1){return!![];}};function $AriaProvider(){var _0x18c1a5={'ariaHidden':!![],'ariaChecked':!![],'ariaReadonly':!![],'ariaDisabled':!![],'ariaRequired':!![],'ariaInvalid':!![],'ariaValue':!![],'tabindex':!![],'bindKeydown':!![],'bindRoleForClick':!![]};this['config']=function(_0x12503b){_0x18c1a5=angular[_0x1792('0xc')](_0x18c1a5,_0x12503b);};function _0x2dc887(_0x49eca6,_0x21f812,_0x46768b,_0x149b3d){return function(_0x5c0d9f,_0x57fa57,_0x49713a){if(_0x49713a[_0x1792('0xd')](ARIA_DISABLE_ATTR))return;var _0x36b481=_0x49713a[_0x1792('0xe')](_0x21f812);if(_0x18c1a5[_0x36b481]&&!isNodeOneOf(_0x57fa57,_0x46768b)&&!_0x49713a[_0x36b481]){_0x5c0d9f[_0x1792('0xf')](_0x49713a[_0x49eca6],function(_0x47e1e9){_0x47e1e9=_0x149b3d?!_0x47e1e9:!!_0x47e1e9;_0x57fa57[_0x1792('0x10')](_0x21f812,_0x47e1e9);});}};}this[_0x1792('0x11')]=function(){return{'config':function(_0x224b96){return _0x18c1a5[_0x224b96];},'$$watchExpr':_0x2dc887};};}ngAriaModule[_0x1792('0x12')](_0x1792('0x13'),[_0x1792('0x5'),function(_0x3f9118){return _0x3f9118['$$watchExpr'](_0x1792('0x13'),_0x1792('0x14'),[],!![]);}])[_0x1792('0x12')]('ngHide',[_0x1792('0x5'),function(_0x23aca6){return _0x23aca6[_0x1792('0x15')]('ngHide',_0x1792('0x14'),[],![]);}])[_0x1792('0x12')](_0x1792('0x16'),[_0x1792('0x5'),function(_0x41c8b4){return _0x41c8b4['$$watchExpr'](_0x1792('0x16'),_0x1792('0x17'),nodeBlackList,![]);}])[_0x1792('0x12')](_0x1792('0x18'),[_0x1792('0x5'),function(_0x5f5642){return _0x5f5642['$$watchExpr']('ngChecked',_0x1792('0x17'),nodeBlackList,![]);}])['directive'](_0x1792('0x19'),[_0x1792('0x5'),function(_0x5c797d){return _0x5c797d['$$watchExpr']('ngReadonly',_0x1792('0x1a'),nodeBlackList,![]);}])[_0x1792('0x12')](_0x1792('0x1b'),[_0x1792('0x5'),function(_0x5c1441){return _0x5c1441[_0x1792('0x15')](_0x1792('0x1b'),_0x1792('0x1c'),nodeBlackList,![]);}])[_0x1792('0x12')](_0x1792('0x1d'),['$aria',function(_0x46c147){function _0x6a570b(_0x4071eb,_0x3e1832,_0x442a6e,_0x35b34c){return _0x46c147[_0x1792('0x1e')](_0x3e1832)&&!_0x442a6e[_0x1792('0x10')](_0x4071eb)&&(_0x35b34c||!isNodeOneOf(_0x442a6e,nodeBlackList))&&(_0x442a6e[_0x1792('0x10')](_0x1792('0x1f'))!==_0x1792('0x20')||_0x442a6e[0x0]['nodeName']!=='INPUT');}function _0xbdc857(_0x394bc4,_0x1014df){return!_0x1014df['attr'](_0x1792('0x21'))&&_0x1014df['attr'](_0x1792('0x1f'))===_0x394bc4&&!isNodeOneOf(_0x1014df,nodeBlackList);}function _0x4637cd(_0x16d026,_0xbad702){var _0x2ec84d=_0x16d026[_0x1792('0x1f')],_0x3a206b=_0x16d026['role'];return(_0x2ec84d||_0x3a206b)===_0x1792('0x22')||_0x3a206b===_0x1792('0x23')?_0x1792('0x22'):(_0x2ec84d||_0x3a206b)==='radio'||_0x3a206b===_0x1792('0x24')?_0x1792('0x25'):_0x2ec84d===_0x1792('0x26')||_0x3a206b===_0x1792('0x27')||_0x3a206b===_0x1792('0x28')?'range':'';}return{'restrict':'A','require':_0x1792('0x1d'),'priority':0xc8,'compile':function(_0x543d22,_0x1a0222){if(_0x1a0222['hasOwnProperty'](ARIA_DISABLE_ATTR))return;var _0x5e0b6f=_0x4637cd(_0x1a0222,_0x543d22);return{'post':function(_0x51c057,_0x543d22,_0x1a0222,_0x519e31){var _0x501039=_0x6a570b(_0x1792('0x29'),'tabindex',_0x543d22,![]);function _0x55b531(){return _0x519e31[_0x1792('0x2a')];}function _0x1597d4(_0x2bcbc7){var _0x4f52f8=_0x1a0222[_0x1792('0x2b')]==_0x519e31[_0x1792('0x2c')];_0x543d22[_0x1792('0x10')](_0x1792('0x17'),_0x4f52f8);}function _0xbdcbae(){_0x543d22[_0x1792('0x10')](_0x1792('0x17'),!_0x519e31[_0x1792('0x2d')](_0x519e31['$viewValue']));}switch(_0x5e0b6f){case _0x1792('0x25'):case _0x1792('0x22'):if(_0xbdc857(_0x5e0b6f,_0x543d22)){_0x543d22[_0x1792('0x10')](_0x1792('0x21'),_0x5e0b6f);}if(_0x6a570b(_0x1792('0x17'),_0x1792('0x2e'),_0x543d22,![])){_0x51c057['$watch'](_0x55b531,_0x5e0b6f==='radio'?_0x1597d4:_0xbdcbae);}if(_0x501039){_0x543d22[_0x1792('0x10')](_0x1792('0x29'),0x0);}break;case _0x1792('0x26'):if(_0xbdc857(_0x5e0b6f,_0x543d22)){_0x543d22[_0x1792('0x10')](_0x1792('0x21'),_0x1792('0x28'));}if(_0x46c147[_0x1792('0x1e')]('ariaValue')){var _0x2b7af1=!_0x543d22['attr'](_0x1792('0x2f'))&&(_0x1a0222['hasOwnProperty'](_0x1792('0x30'))||_0x1a0222[_0x1792('0xd')](_0x1792('0x31')));var _0x19b9d4=!_0x543d22[_0x1792('0x10')](_0x1792('0x32'))&&(_0x1a0222[_0x1792('0xd')](_0x1792('0x33'))||_0x1a0222[_0x1792('0xd')](_0x1792('0x34')));var _0xecf8d3=!_0x543d22[_0x1792('0x10')](_0x1792('0x35'));if(_0x2b7af1){_0x1a0222[_0x1792('0x36')]('min',function ngAriaValueMinReaction(_0x45ca60){_0x543d22[_0x1792('0x10')]('aria-valuemin',_0x45ca60);});}if(_0x19b9d4){_0x1a0222[_0x1792('0x36')](_0x1792('0x33'),function ngAriaValueMinReaction(_0x12e537){_0x543d22['attr'](_0x1792('0x32'),_0x12e537);});}if(_0xecf8d3){_0x51c057[_0x1792('0xf')](_0x55b531,function ngAriaValueNowReaction(_0x5e00b6){_0x543d22[_0x1792('0x10')](_0x1792('0x35'),_0x5e00b6);});}}if(_0x501039){_0x543d22[_0x1792('0x10')](_0x1792('0x29'),0x0);}break;}if(!_0x1a0222['hasOwnProperty'](_0x1792('0x1b'))&&_0x519e31['$validators']['required']&&_0x6a570b('aria-required','ariaRequired',_0x543d22,![])){_0x1a0222[_0x1792('0x36')](_0x1792('0x37'),function(){_0x543d22[_0x1792('0x10')]('aria-required',!!_0x1a0222[_0x1792('0x37')]);});}if(_0x6a570b('aria-invalid',_0x1792('0x38'),_0x543d22,!![])){_0x51c057[_0x1792('0xf')](function ngAriaInvalidWatch(){return _0x519e31['$invalid'];},function ngAriaInvalidReaction(_0x2e43ec){_0x543d22['attr'](_0x1792('0x39'),!!_0x2e43ec);});}}};}};}])[_0x1792('0x12')]('ngDisabled',[_0x1792('0x5'),function(_0x338213){return _0x338213[_0x1792('0x15')](_0x1792('0x3a'),'aria-disabled',nodeBlackList,![]);}])[_0x1792('0x12')](_0x1792('0x3b'),function(){return{'restrict':'A','require':_0x1792('0x3c'),'link':function(_0x5c1b33,_0x1dccaa,_0x376de5,_0x307bac){if(_0x376de5['hasOwnProperty'](ARIA_DISABLE_ATTR))return;if(!_0x1dccaa[_0x1792('0x10')]('aria-live')){_0x1dccaa[_0x1792('0x10')](_0x1792('0x3d'),_0x1792('0x3e'));}}};})[_0x1792('0x12')](_0x1792('0x3f'),[_0x1792('0x5'),'$parse',function(_0x49a4be,_0x4cc4a4){return{'restrict':'A','compile':function(_0x507ac9,_0x109047){if(_0x109047['hasOwnProperty'](ARIA_DISABLE_ATTR))return;var _0x448a9b=_0x4cc4a4(_0x109047[_0x1792('0x3f')]);return function(_0x45a94e,_0x507ac9,_0x109047){if(!isNodeOneOf(_0x507ac9,nodeBlackList)){if(_0x49a4be['config'](_0x1792('0x40'))&&!_0x507ac9[_0x1792('0x10')](_0x1792('0x21'))){_0x507ac9[_0x1792('0x10')]('role',_0x1792('0x41'));}if(_0x49a4be[_0x1792('0x1e')](_0x1792('0x29'))&&!_0x507ac9[_0x1792('0x10')](_0x1792('0x29'))){_0x507ac9[_0x1792('0x10')](_0x1792('0x29'),0x0);}if(_0x49a4be[_0x1792('0x1e')](_0x1792('0x42'))&&!_0x109047['ngKeydown']&&!_0x109047[_0x1792('0x43')]&&!_0x109047[_0x1792('0x44')]){_0x507ac9['on'](_0x1792('0x45'),function(_0x3777ae){var _0x5035c2=_0x3777ae[_0x1792('0x46')]||_0x3777ae[_0x1792('0x47')];if(_0x5035c2===0xd||_0x5035c2===0x20){if(nodeBlackList[_0x1792('0x48')](_0x3777ae[_0x1792('0x49')][_0x1792('0xb')])===-0x1&&!_0x3777ae[_0x1792('0x49')][_0x1792('0x4a')]){_0x3777ae[_0x1792('0x4b')]();}_0x45a94e[_0x1792('0x4c')](_0x5cf601);}function _0x5cf601(){_0x448a9b(_0x45a94e,{'$event':_0x3777ae});}});}}};}};}])['directive'](_0x1792('0x4d'),['$aria',function(_0x275fc6){return function(_0x3d29d0,_0x5aea33,_0x20c037){if(_0x20c037['hasOwnProperty'](ARIA_DISABLE_ATTR))return;if(_0x275fc6[_0x1792('0x1e')](_0x1792('0x29'))&&!_0x5aea33['attr']('tabindex')&&!isNodeOneOf(_0x5aea33,nodeBlackList)){_0x5aea33[_0x1792('0x10')](_0x1792('0x29'),0x0);}};}]);