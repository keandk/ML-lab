var _0xe45f=['$set','UTC','/learn/','resolve','has','findById','set','isObjectId','sendStatus','challengeType','body','solution','isValid','user','getCompletedChallenges$','flatMap','points','updateAttributes','fromPromise','json','subscribe','githubLink','danger','You\x20haven\x27t\x20supplied\x20the\x20necessary\x20URLs\x20for\x20us\x20to\x20inspect\x20your\x20work.','doOnNext','send','currentChallengeId','catch','Unknown\x20ID','redirect','path','split','loopback','Router','post','/modern-challenge-completed','/project-completed','/backend-challenge-completed','get','/challenges/current-challenge','/challenges/*','/map','use','/learn','aaa48de84e1ecc7c742e1124','a7f4d8f2483413a6ce226cac','56533eb9ac21ba0edf2244e2','aff0395860f5d3034dc0bfc9','includes','keys','map','contents','key','name','ext','files','completedDate','$push','now'];(function(_0xaebf09,_0xf7d5ad){var _0x1beef7=function(_0x15e3ee){while(--_0x15e3ee){_0xaebf09['push'](_0xaebf09['shift']());}};_0x1beef7(++_0xf7d5ad);}(_0xe45f,0xd1));var _0x5807=function(_0x2210d3,_0x3192ed){_0x2210d3=_0x2210d3-0x0;var _0x465293=_0xe45f[_0x2210d3];return _0x465293;};import{Observable}from'rx';import{isEmpty,pick,omit,find,uniqBy,last}from'lodash';import _0x46c125 from'debug';import _0x12c22e from'dedent';import{ObjectID}from'mongodb';import _0x2bcc70 from'validator/lib/isNumeric';import _0x4ab952 from'validator/lib/isURL';import{homeLocation}from'../../../config/env';import{ifNoUserSend}from'../utils/middleware';import{dasherize}from'../utils';import _0x214e2f from'../resources/pathMigration.json';import{fixCompletedChallengeItem}from'../../common/utils';const log=_0x46c125('fcc:boot:challenges');export default async function bootChallenge(app,done){const send200toNonUser=ifNoUserSend(!![]);const api=app[_0x5807('0x0')]['Router']();const router=app[_0x5807('0x0')][_0x5807('0x1')]();const redirectToLearn=createRedirectToLearn(_0x214e2f);const challengeUrlResolver=await createChallengeUrlResolver(app);const redirectToCurrentChallenge=createRedirectToCurrentChallenge(challengeUrlResolver);api[_0x5807('0x2')](_0x5807('0x3'),send200toNonUser,isValidChallengeCompletion,modernChallengeCompleted);api[_0x5807('0x2')](_0x5807('0x4'),send200toNonUser,isValidChallengeCompletion,projectCompleted);api['post'](_0x5807('0x5'),send200toNonUser,isValidChallengeCompletion,backendChallengeCompleted);router[_0x5807('0x6')](_0x5807('0x7'),redirectToCurrentChallenge);router['get']('/challenges',redirectToLearn);router[_0x5807('0x6')](_0x5807('0x8'),redirectToLearn);router[_0x5807('0x6')](_0x5807('0x9'),redirectToLearn);app[_0x5807('0xa')](api);app[_0x5807('0xa')]('/internal',api);app['use'](router);done();}const learnURL=homeLocation+_0x5807('0xb');const jsProjects=[_0x5807('0xc'),_0x5807('0xd'),_0x5807('0xe'),_0x5807('0xf'),'aa2e6f85cab2ab736c9a9b24'];export function buildUserUpdate(user,challengeId,_completedChallenge,timezone){const {files}=_completedChallenge;let completedChallenge={};if(jsProjects[_0x5807('0x10')](challengeId)){completedChallenge={..._completedChallenge,'files':Object[_0x5807('0x11')](files)[_0x5807('0x12')](key=>files[key])[_0x5807('0x12')](file=>pick(file,[_0x5807('0x13'),_0x5807('0x14'),'index',_0x5807('0x15'),'path',_0x5807('0x16')]))};}else{completedChallenge=omit(_completedChallenge,[_0x5807('0x17')]);}let finalChallenge;const updateData={};const {timezone:userTimezone,completedChallenges=[]}=user;const oldChallenge=find(completedChallenges,({id})=>challengeId===id);const alreadyCompleted=!!oldChallenge;if(alreadyCompleted){finalChallenge={...completedChallenge,'completedDate':oldChallenge[_0x5807('0x18')]};}else{updateData[_0x5807('0x19')]={...updateData[_0x5807('0x19')],'progressTimestamps':Date[_0x5807('0x1a')]()};finalChallenge={...completedChallenge};}updateData[_0x5807('0x1b')]={'completedChallenges':uniqBy([finalChallenge,...completedChallenges['map'](fixCompletedChallengeItem)],'id')};if(timezone&&timezone!==_0x5807('0x1c')&&(!userTimezone||userTimezone===_0x5807('0x1c'))){updateData[_0x5807('0x1b')]={...updateData[_0x5807('0x1b')],'timezone':userTimezone};}return{'alreadyCompleted':alreadyCompleted,'updateData':updateData,'completedDate':finalChallenge[_0x5807('0x18')]};}export function buildChallengeUrl(challenge){const {superBlock,block,dashedName}=challenge;return _0x5807('0x1d')+dasherize(superBlock)+'/'+dasherize(block)+'/'+dashedName;}export function getFirstChallenge(Challenge){return new Promise(resolve=>{Challenge['findOne']({'where':{'challengeOrder':0x0,'superOrder':0x1,'order':0x0}},(err,challenge)=>{if(err||isEmpty(challenge)){return resolve(_0x5807('0xb'));}return resolve(buildChallengeUrl(challenge));});});}export async function createChallengeUrlResolver(app,{_getFirstChallenge=getFirstChallenge}={}){const {Challenge}=app['models'];const cache=new Map();const firstChallenge=await _getFirstChallenge(Challenge);return function resolveChallengeUrl(id){if(isEmpty(id)){return Promise[_0x5807('0x1e')](firstChallenge);}return new Promise(resolve=>{if(cache[_0x5807('0x1f')](id)){return resolve(cache[_0x5807('0x6')](id));}return Challenge[_0x5807('0x20')](id,(err,challenge)=>{if(err||isEmpty(challenge)){return resolve(firstChallenge);}const challengeUrl=buildChallengeUrl(challenge);cache[_0x5807('0x21')](id,challengeUrl);return resolve(challengeUrl);});});};}export function isValidChallengeCompletion(req,res,next){const {body:{id,challengeType,solution}}=req;if(!ObjectID['isValid'](id)){log(_0x5807('0x22'),id,ObjectID['isValid'](id));return res[_0x5807('0x23')](0x193);}if(_0x5807('0x24')in req[_0x5807('0x25')]&&!_0x2bcc70(String(challengeType))){log(_0x5807('0x24'),challengeType,_0x2bcc70(challengeType));return res[_0x5807('0x23')](0x193);}if(_0x5807('0x26')in req[_0x5807('0x25')]&&!_0x4ab952(solution)){log('isObjectId',id,ObjectID[_0x5807('0x27')](id));return res[_0x5807('0x23')](0x193);}return next();}export function modernChallengeCompleted(req,res,next){const user=req[_0x5807('0x28')];return user[_0x5807('0x29')]()[_0x5807('0x2a')](()=>{const completedDate=Date[_0x5807('0x1a')]();const {id,files}=req['body'];const {alreadyCompleted,updateData}=buildUserUpdate(user,id,{'id':id,'files':files,'completedDate':completedDate});const points=alreadyCompleted?user['points']:user[_0x5807('0x2b')]+0x1;const updatePromise=new Promise((resolve,reject)=>user[_0x5807('0x2c')](updateData,err=>{if(err){return reject(err);}return resolve();}));return Observable[_0x5807('0x2d')](updatePromise)[_0x5807('0x12')](()=>{return res[_0x5807('0x2e')]({'points':points,'alreadyCompleted':alreadyCompleted,'completedDate':completedDate});});})[_0x5807('0x2f')](()=>{},next);}function projectCompleted(req,res,next){const {user,body={}}=req;const completedChallenge=pick(body,['id','solution',_0x5807('0x30'),_0x5807('0x24'),'files']);completedChallenge[_0x5807('0x18')]=Date[_0x5807('0x1a')]();if(!completedChallenge[_0x5807('0x26')]||completedChallenge[_0x5807('0x24')]===0x4&&!completedChallenge[_0x5807('0x30')]){req['flash'](_0x5807('0x31'),_0x5807('0x32'));return res[_0x5807('0x23')](0x193);}return user['getCompletedChallenges$']()[_0x5807('0x2a')](()=>{const {alreadyCompleted,updateData}=buildUserUpdate(user,completedChallenge['id'],completedChallenge);const updatePromise=new Promise((resolve,reject)=>user[_0x5807('0x2c')](updateData,err=>{if(err){return reject(err);}return resolve();}));return Observable['fromPromise'](updatePromise)[_0x5807('0x33')](()=>{return res[_0x5807('0x34')]({'alreadyCompleted':alreadyCompleted,'points':alreadyCompleted?user[_0x5807('0x2b')]:user[_0x5807('0x2b')]+0x1,'completedDate':completedChallenge['completedDate']});});})[_0x5807('0x2f')](()=>{},next);}function backendChallengeCompleted(req,res,next){const {user,body={}}=req;const completedChallenge=pick(body,['id','solution']);completedChallenge[_0x5807('0x18')]=Date['now']();return user[_0x5807('0x29')]()[_0x5807('0x2a')](()=>{const {alreadyCompleted,updateData}=buildUserUpdate(user,completedChallenge['id'],completedChallenge);const updatePromise=new Promise((resolve,reject)=>user['updateAttributes'](updateData,err=>{if(err){return reject(err);}return resolve();}));return Observable[_0x5807('0x2d')](updatePromise)[_0x5807('0x33')](()=>{return res[_0x5807('0x34')]({'alreadyCompleted':alreadyCompleted,'points':alreadyCompleted?user['points']:user[_0x5807('0x2b')]+0x1,'completedDate':completedChallenge['completedDate']});});})[_0x5807('0x2f')](()=>{},next);}export function createRedirectToCurrentChallenge(challengeUrlResolver,{_homeLocation=homeLocation,_learnUrl=learnURL}={}){return async function redirectToCurrentChallenge(req,res,next){const {user}=req;if(!user){return res['redirect'](_learnUrl);}const challengeId=user&&user[_0x5807('0x35')];const challengeUrl=await challengeUrlResolver(challengeId)[_0x5807('0x36')](next);if(challengeUrl==='/learn'){throw new Error(_0x12c22e`
        Attempted to find the url for ${challengeId||_0x5807('0x37')}'
        but came up empty.
        db may not be properly seeded.
      `);}return res[_0x5807('0x38')](''+_homeLocation+challengeUrl);};}export function createRedirectToLearn(pathMigrations,base=homeLocation,learn=learnURL){return function redirectToLearn(req,res){const maybeChallenge=last(req[_0x5807('0x39')][_0x5807('0x3a')]('/'));if(maybeChallenge in pathMigrations){const redirectPath=pathMigrations[maybeChallenge];return res['status'](0x12e)[_0x5807('0x38')](''+base+redirectPath);}return res['status'](0x12e)['redirect'](learn);};}