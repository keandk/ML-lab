var _0x4a84=['/challenges/','replace','from','filter','test','name','last','env','NODE_ENV','production','BETA','once','find$','suborder\x20ASC','map','toJSON','reduce','dashedName','superOrder\x20ASC','order\x20ASC','combineLatest','block','challenges','push','superBlock','blocks','superOrder','superBlockMessage','keys','shareReplay','flatMap','challenge','just'];(function(_0x34b536,_0x20a1a3){var _0x150cea=function(_0x20bddc){while(--_0x20bddc){_0x34b536['push'](_0x34b536['shift']());}};_0x150cea(++_0x20a1a3);}(_0x4a84,0x1b4));var _0x49eb=function(_0x1dca97,_0x2e1402){_0x1dca97=_0x1dca97-0x0;var _0x3b5f9c=_0x4a84[_0x1dca97];return _0x3b5f9c;};import _0x9faef5 from'lodash';import{Observable}from'rx';import{unDasherize,nameify}from'../utils';import{addNameIdMap as _0x331770,checkMapData,getFirstChallenge as _0x356352}from'../../common/utils/map.js';const isDev=process[_0x49eb('0x0')][_0x49eb('0x1')]!==_0x49eb('0x2');const isBeta=!!process[_0x49eb('0x0')][_0x49eb('0x3')];const challengesRegex=/^(bonfire|waypoint|zipline|basejump|checkpoint)/i;const addNameIdMap=_0x9faef5[_0x49eb('0x4')](_0x331770);const getFirstChallenge=_0x9faef5[_0x49eb('0x4')](_0x356352);export function _cachedMap({Block,Challenge}){const challenges=Challenge[_0x49eb('0x5')]({'order':['order\x20ASC',_0x49eb('0x6')],'where':{'isPrivate':![]}});const challengeMap=challenges['map'](challenges=>challenges[_0x49eb('0x7')](challenge=>challenge[_0x49eb('0x8')]())[_0x49eb('0x9')]((hash,challenge)=>{hash[challenge[_0x49eb('0xa')]]=challenge;return hash;},{}));const blocks=Block['find$']({'order':[_0x49eb('0xb'),_0x49eb('0xc')],'where':{'isPrivate':![]}});const blockMap=Observable[_0x49eb('0xd')](blocks['map'](blocks=>blocks[_0x49eb('0x7')](block=>block[_0x49eb('0x8')]())[_0x49eb('0x9')]((hash,block)=>{hash[block['dashedName']]=block;return hash;},{})),challenges)[_0x49eb('0x7')](([blocksMap,challenges])=>{return challenges['reduce']((blocksMap,challenge)=>{if(blocksMap[challenge[_0x49eb('0xe')]][_0x49eb('0xf')]){blocksMap[challenge[_0x49eb('0xe')]][_0x49eb('0xf')][_0x49eb('0x10')](challenge[_0x49eb('0xa')]);}else{blocksMap[challenge['block']]={...blocksMap[challenge['block']],'challenges':[challenge[_0x49eb('0xa')]]};}return blocksMap;},blocksMap);});const superBlockMap=blocks[_0x49eb('0x7')](blocks=>blocks[_0x49eb('0x9')]((map,block)=>{if(map[block['superBlock']]&&map[block[_0x49eb('0x11')]][_0x49eb('0x12')]){map[block[_0x49eb('0x11')]][_0x49eb('0x12')][_0x49eb('0x10')](block[_0x49eb('0xa')]);}else{map[block[_0x49eb('0x11')]]={'title':_0x9faef5['startCase'](block['superBlock']),'order':block[_0x49eb('0x13')],'name':nameify(_0x9faef5['startCase'](block[_0x49eb('0x11')])),'dashedName':block['superBlock'],'blocks':[block['dashedName']],'message':block[_0x49eb('0x14')]};}return map;},{}));const superBlocks=superBlockMap[_0x49eb('0x7')](superBlockMap=>{return Object[_0x49eb('0x15')](superBlockMap)[_0x49eb('0x7')](key=>superBlockMap[key])[_0x49eb('0x7')](({dashedName})=>dashedName);});return Observable[_0x49eb('0xd')](superBlockMap,blockMap,challengeMap,superBlocks,(superBlock,block,challenge,superBlocks)=>({'entities':{'superBlock':superBlock,'block':block,'challenge':challenge},'result':{'superBlocks':superBlocks}}))['do'](checkMapData)[_0x49eb('0x16')]();}export const cachedMap=_0x9faef5[_0x49eb('0x4')](_cachedMap);export function getChallengeById(map,id){return Observable['if'](()=>!id,map[_0x49eb('0x7')](getFirstChallenge),map[_0x49eb('0x7')](addNameIdMap)[_0x49eb('0x7')](map=>{const {entities:{challenge:challengeMap,challengeIdToName}}=map;let finalChallenge;const dashedName=challengeIdToName[id];finalChallenge=challengeMap[dashedName];if(!finalChallenge){finalChallenge=getFirstChallenge(map);}return finalChallenge;}));}export function getChallengeInfo(map){return map[_0x49eb('0x7')](addNameIdMap)[_0x49eb('0x7')](({entities:{challenge:challengeMap,challengeIdToName}})=>({'challengeMap':challengeMap,'challengeIdToName':challengeIdToName}));}function loadComingSoonOrBetaChallenge({isComingSoon,isBeta:challengeIsBeta}){return!(isComingSoon||challengeIsBeta)||isDev||isBeta;}export function getChallenge(challengeDashedName,blockDashedName,map){return map[_0x49eb('0x17')](({entities,result:{superBlocks}})=>{const superBlock=entities[_0x49eb('0x11')];const block=entities[_0x49eb('0xe')][blockDashedName];const challenge=entities[_0x49eb('0x18')][challengeDashedName];return Observable['if'](()=>!blockDashedName||!block||!challenge||!loadComingSoonOrBetaChallenge(challenge),getChallengeByDashedName(challengeDashedName,map),Observable[_0x49eb('0x19')]({'block':block,'challenge':challenge}))[_0x49eb('0x7')](({challenge,block})=>({'redirect':challenge[_0x49eb('0xe')]!==blockDashedName?_0x49eb('0x1a')+block[_0x49eb('0xa')]+'/'+challenge['dashedName']:![],'entities':{'superBlock':superBlock,'challenge':{[challenge[_0x49eb('0xa')]]:challenge}},'result':{'block':block[_0x49eb('0xa')],'challenge':challenge[_0x49eb('0xa')],'superBlocks':superBlocks}}));});}export function getBlockForChallenge(map,challenge){return map[_0x49eb('0x7')](({entities:{block}})=>block[challenge[_0x49eb('0xe')]]);}export function getChallengeByDashedName(dashedName,map){const challengeName=unDasherize(dashedName)[_0x49eb('0x1b')](challengesRegex,'');const testChallengeName=new RegExp(challengeName,'i');return map[_0x49eb('0x7')](({entities})=>entities[_0x49eb('0x18')])['flatMap'](challengeMap=>{return Observable[_0x49eb('0x1c')](Object[_0x49eb('0x15')](challengeMap))['map'](key=>challengeMap[key]);})[_0x49eb('0x1d')](challenge=>{return loadComingSoonOrBetaChallenge(challenge)&&testChallengeName[_0x49eb('0x1e')](challenge[_0x49eb('0x1f')]);})[_0x49eb('0x20')]({'defaultValue':null})[_0x49eb('0x17')](challengeOrNull=>{return Observable['if'](()=>!!challengeOrNull,Observable['just'](challengeOrNull),map[_0x49eb('0x7')](getFirstChallenge));})[_0x49eb('0x17')](challenge=>{return getBlockForChallenge(map,challenge)[_0x49eb('0x7')](block=>({'challenge':challenge,'block':block}));});}