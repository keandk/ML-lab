var _0x1176=['createBenchmark','buf','write','end','http','alloc','utf','repeat','asc','createServer','listen','PORT','close','../common.js'];(function(_0x542756,_0x5bf9da){var _0x47cf7c=function(_0x49dbf5){while(--_0x49dbf5){_0x542756['push'](_0x542756['shift']());}};_0x47cf7c(++_0x5bf9da);}(_0x1176,0xdf));var _0x1981=function(_0x268c33,_0x5205ba){_0x268c33=_0x268c33-0x0;var _0x5937c6=_0x1176[_0x268c33];return _0x5937c6;};// When calling .end(buffer) right away, this triggers a "hot path"
// optimization in http.js, to avoid an extra write call.
//
// However, the overhead of copying a large buffer is higher than
// the overhead of an extra write() call, so the hot path was not
// always as hot as it could be.
//
// Verify that our assumptions are valid.
'use strict';const common=require(_0x1981('0x0'));const bench=common[_0x1981('0x1')](main,{'type':['asc','utf',_0x1981('0x2')],'len':[0x40*0x400,0x80*0x400,0x100*0x400,0x400*0x400],'c':[0x64],'method':[_0x1981('0x3'),_0x1981('0x4')]});function main({len,type,method,c}){const _0x5cb666=require(_0x1981('0x5'));var _0x3633ac;switch(type){case'buf':_0x3633ac=Buffer[_0x1981('0x6')](len,'x');break;case _0x1981('0x7'):_0x3633ac='Ã¼'[_0x1981('0x8')](len/0x2);break;case _0x1981('0x9'):_0x3633ac='a'[_0x1981('0x8')](len);break;}function _0x3077e7(_0x853001){_0x853001['write'](_0x3633ac);_0x853001['end']();}function _0x435892(_0x4cd398){_0x4cd398[_0x1981('0x4')](_0x3633ac);}const _0x2c3409=method===_0x1981('0x3')?_0x3077e7:_0x435892;const _0x44e46f=_0x5cb666[_0x1981('0xa')]((_0x97f00e,_0x22953c)=>{_0x2c3409(_0x22953c);});_0x44e46f[_0x1981('0xb')](common[_0x1981('0xc')],()=>{bench[_0x1981('0x5')]({'connections':c},()=>{_0x44e46f[_0x1981('0xd')]();});});}