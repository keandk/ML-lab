var _0x468c=['respWebDesignCert','apisMicroservicesCert','infosecQaCert','marking\x20goal\x20complete','isCompleted','dateEnded','userId','save','fromNodeCallback','pledge','just','No\x20pledge\x20found','frontEndCert'];(function(_0x45b07,_0x1659e2){var _0x18b28f=function(_0x17d01f){while(--_0x17d01f){_0x45b07['push'](_0x45b07['shift']());}};_0x18b28f(++_0x1659e2);}(_0x468c,0x167));var _0xf125=function(_0x2f3e31,_0x3a89c9){_0x2f3e31=_0x2f3e31-0x0;var _0x2c6db2=_0x468c[_0x2f3e31];return _0x2c6db2;};import _0x2b8e3a from'dedent';import _0x27b6d1 from'debug';import{Observable}from'rx';import _0x4b6d09 from'./commit-goals.json';const debug=_0x27b6d1('fcc:utils/commit');export{_0x4b6d09};export function completeCommitment$(user){const {isFrontEndCert,isBackEndCert,isFullStackCert,isRespWebDesignCert,isFrontEndLibsCert,isJsAlgoDataStructCert,isDataVisCert,isApisMicroservicesCert,isInfosecQaCert}=user;return Observable[_0xf125('0x0')](user[_0xf125('0x1')],user)()['flatMap'](pledge=>{if(!pledge){return Observable[_0xf125('0x2')](_0xf125('0x3'));}const {goal}=pledge;if(isFrontEndCert&&goal===_0x4b6d09[_0xf125('0x4')]||isBackEndCert&&goal===_0x4b6d09['backEndCert']||isFullStackCert&&goal===_0x4b6d09['fullStackCert']||isRespWebDesignCert&&goal===_0x4b6d09[_0xf125('0x5')]||isFrontEndLibsCert&&goal===_0x4b6d09['frontEndLibsCert']||isJsAlgoDataStructCert&&goal===_0x4b6d09['jsAlgoDataStructCert']||isDataVisCert&&goal===_0x4b6d09['dataVisCert']||isApisMicroservicesCert&&goal===_0x4b6d09[_0xf125('0x6')]||isInfosecQaCert&&goal===_0x4b6d09[_0xf125('0x7')]){debug(_0xf125('0x8'));pledge[_0xf125('0x9')]=!![];pledge[_0xf125('0xa')]=new Date();pledge['formerUserId']=pledge['userId'];pledge[_0xf125('0xb')]=null;return Observable[_0xf125('0x0')](pledge[_0xf125('0xc')],pledge)();}return Observable[_0xf125('0x2')](_0x2b8e3a`
        You have not yet reached your goal of completing the ${goal}
        Please retry when you have met the requirements.
      `);});}